{"ast":null,"code":"var _jsxFileName = \"/Users/when630/Documents/GitHub/HongBridge1/hongbridge-app/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\n// src/components/Chatbot.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: '안녕하세요! 무엇을 도와드릴까요?'\n  }]);\n  const [input, setInput] = useState('');\n  const chatEndRef = useRef(null);\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    const botReply = {\n      sender: 'bot',\n      text: '죄송해요, 아직 답변 로직은 없어요!'\n    };\n    setMessages([...messages, userMessage, botReply]);\n    setInput('');\n  };\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: \"\\uCC57\\uBD07 \\uC0C1\\uB2F4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"MgxPCnw6kI4KYtuFHhlj/C8nhMo=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","input","setInput","chatEndRef","handleSend","trim","userMessage","botReply","_chatEndRef$current","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","ref","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/when630/Documents/GitHub/HongBridge1/hongbridge-app/frontend/src/components/Chatbot.js"],"sourcesContent":["// src/components/Chatbot.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Chatbot.css';\n\nexport default function Chatbot() {\n  const [messages, setMessages] = useState([\n    { sender: 'bot', text: '안녕하세요! 무엇을 도와드릴까요?' }\n  ]);\n  const [input, setInput] = useState('');\n  const chatEndRef = useRef(null);\n\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = { sender: 'user', text: input };\n    const botReply = { sender: 'bot', text: '죄송해요, 아직 답변 로직은 없어요!' };\n\n    setMessages([...messages, userMessage, botReply]);\n    setInput('');\n  };\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <div className=\"chatbot-wrapper\">\n      <div className=\"chatbot-header\">챗봇 상담</div>\n      <div className=\"chat-window\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n        <div ref={chatEndRef} />\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          placeholder=\"메시지를 입력하세요...\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => e.key === 'Enter' && handleSend()}\n        />\n        <button onClick={handleSend}>전송</button>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}